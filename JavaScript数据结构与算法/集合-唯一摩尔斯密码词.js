/*
* @Author: yangyang
* @Date:   2019-08-28 08:27:42
* @Last Modified by:   yangyang
* @Last Modified time: 2019-08-28 15:59:14
*/

/*
letcode 804 唯一摩尔斯密码词

国际摩尔斯密码定义一种标准编码方式，将每个字母对应于一个由一系列点和短线组成的字符串， 
比如: "a" 对应 ".-", "b" 对应 "-...", "c" 对应 "-.-.", 等等。
为了方便，所有26个英文字母对应摩尔斯密码表如下：

[".-","-...","-.-.","-..",".","..-.","--.","....","..",".---","-.-",".-..","--","-.","---",".--.","--.-",".-.","...","-","..-","...-",".--","-..-","-.--","--.."]
给定一个单词列表，每个单词可以写成每个字母对应摩尔斯密码的组合。
例如，"cab" 可以写成 "-.-..--..."，(即 "-.-." + "-..." + ".-"字符串的结合)。我们将这样一个连接过程称作单词翻译。

返回我们可以获得所有词不同单词翻译的数量。

例如:
输入: words = ["gin", "zen", "gig", "msg"]
输出: 2
解释: 
各单词翻译如下:
"gin" -> "--...-."
"zen" -> "--...-."
"gig" -> "--...--."
"msg" -> "--...--."

共有 2 种不同翻译, "--...-." 和 "--...--.".

思路：
1.两重循环，先翻译字符串
2.外层循环加入Set集合，集合自动去重

*/

let uniqueMorseRepresentations = function(words){

	let code = [".-","-...","-.-.","-..",".","..-.","--.","....","..",".---","-.-",".-..","--","-.","---",".--.","--.-",".-.","...","-","..-","...-",".--","-..-","-.--","--.."];
	//因为abc...的ASCII码是从97开始，为了保证索引是从0,1,2开始，所以要求出a对应的ASCII值，然后减去a的ASCII值
	let charCodeAtA = 'a'.charCodeAt()

	let target = new Set();	//用来存放翻译后的单词

	for(let i of words){
		let tmp = ''; //临时变量，用于存放翻译后单词
		for(let j of i){
			tmp = tmp + code[j.charCodeAt() - charCodeAtA] ////获取单词中的字母的ascii（10进制）值-获取字母‘a’的ascii（10进制）值（为了取每个字母对应的摩尔斯密码）
		}
		target.add(tmp);
	}

	return target.size	//ES6中Set的size是属性

}

//第二种方法：利用Array.form()和reduce()

var uniqueMorseRepresentations = function(words) {
    let morseMap = [".-","-...","-.-.","-..",".","..-.","--.","....","..",".---","-.-",".-..","--","-.","---",".--.","--.-",".-.","...","-","..-","...-",".--","-..-","-.--","--.."];
    return new Set(words.map(word=>{
        return Array.from(word).reduce((total,w)=>{
           return total += morseMap[w.charCodeAt()-97]
        },"")
    })).size
};




